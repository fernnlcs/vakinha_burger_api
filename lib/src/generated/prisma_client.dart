library prisma.client; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:orm/orm.dart' as _i1;
import 'package:json_annotation/json_annotation.dart' as _i2;
import 'package:orm/dmmf.dart' as _i3;
import 'package:orm/configure.dart' as _i4;
export 'package:orm/orm.dart' show Datasource, PrismaNull, PrismaUnion;
export 'package:orm/orm.dart' show TransactionIsolationLevel;

part 'prisma_client.g.dart';
// GENERATED CODE - DO NOT MODIFY BY HAND
//
// ignore_for_file: constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names
//
//******************************************************************************
// This file was generated by Prisma
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum OrderItemScalarFieldEnum { id, quantity, order_id, product_id }

enum OrderScalarFieldEnum {
  id,
  user_id,
  transaction_id,
  client_cpf,
  delivery_address,
  status
}

enum ProductScalarFieldEnum { id, name, description, price, image }

enum SortOrder { asc, desc }

enum UserScalarFieldEnum { id, email, name, password }

class UserWhereInput implements _i1.JsonSerializable {
  const UserWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.name,
    this.password,
    this.orders,
  });

  final _i1.PrismaNullable<List<UserWhereInput>> AND;

  final _i1.PrismaNullable<List<UserWhereInput>> OR;

  final _i1.PrismaNullable<List<UserWhereInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> email;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> name;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> password;

  final _i1.PrismaNullable<OrderListRelationFilter> orders;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'email': email,
      'name': name,
      'password': password,
      'orders': orders,
    };
  }
}

class UserOrderByWithRelationInput implements _i1.JsonSerializable {
  const UserOrderByWithRelationInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.orders,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> password;

  final _i1.PrismaNullable<OrderOrderByRelationAggregateInput> orders;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
      'orders': orders,
    };
  }
}

class UserWhereUniqueInput implements _i1.JsonSerializable {
  const UserWhereUniqueInput({
    this.id,
    this.email,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
    };
  }
}

class UserOrderByWithAggregationInput implements _i1.JsonSerializable {
  const UserOrderByWithAggregationInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> password;

  final _i1.PrismaNullable<UserCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<UserAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<UserMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<UserMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<UserSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class UserScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const UserScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<List<UserScalarWhereWithAggregatesInput>> AND;

  final _i1.PrismaNullable<List<UserScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<List<UserScalarWhereWithAggregatesInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntWithAggregatesFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      email;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      name;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class ProductWhereInput implements _i1.JsonSerializable {
  const ProductWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
    this.orderedItems,
  });

  final _i1.PrismaNullable<List<ProductWhereInput>> AND;

  final _i1.PrismaNullable<List<ProductWhereInput>> OR;

  final _i1.PrismaNullable<List<ProductWhereInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> name;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<FloatFilter, double>> price;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringNullableFilter, String>> image;

  final _i1.PrismaNullable<OrderItemListRelationFilter> orderedItems;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
      'orderedItems': orderedItems,
    };
  }
}

class ProductOrderByWithRelationInput implements _i1.JsonSerializable {
  const ProductOrderByWithRelationInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
    this.orderedItems,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> price;

  final _i1.PrismaNullable<SortOrder> image;

  final _i1.PrismaNullable<OrderItemOrderByRelationAggregateInput> orderedItems;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
      'orderedItems': orderedItems,
    };
  }
}

class ProductWhereUniqueInput implements _i1.JsonSerializable {
  const ProductWhereUniqueInput({this.id});

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class ProductOrderByWithAggregationInput implements _i1.JsonSerializable {
  const ProductOrderByWithAggregationInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> price;

  final _i1.PrismaNullable<SortOrder> image;

  final _i1.PrismaNullable<ProductCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<ProductAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<ProductMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<ProductMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<ProductSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class ProductScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const ProductScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<List<ProductScalarWhereWithAggregatesInput>> AND;

  final _i1.PrismaNullable<List<ProductScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<List<ProductScalarWhereWithAggregatesInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntWithAggregatesFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      name;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      description;

  final _i1.PrismaNullable<_i1.PrismaUnion<FloatWithAggregatesFilter, double>>
      price;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<StringNullableWithAggregatesFilter, String>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class OrderWhereInput implements _i1.JsonSerializable {
  const OrderWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.user,
    this.items,
  });

  final _i1.PrismaNullable<List<OrderWhereInput>> AND;

  final _i1.PrismaNullable<List<OrderWhereInput>> OR;

  final _i1.PrismaNullable<List<OrderWhereInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> user_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntNullableFilter, int>>
      transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringNullableFilter, String>>
      client_cpf;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>>
      delivery_address;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> status;

  final _i1.PrismaNullable<_i1.PrismaUnion<UserRelationFilter, UserWhereInput>>
      user;

  final _i1.PrismaNullable<OrderItemListRelationFilter> items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'user': user,
      'items': items,
    };
  }
}

class OrderOrderByWithRelationInput implements _i1.JsonSerializable {
  const OrderOrderByWithRelationInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.user,
    this.items,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> user_id;

  final _i1.PrismaNullable<SortOrder> transaction_id;

  final _i1.PrismaNullable<SortOrder> client_cpf;

  final _i1.PrismaNullable<SortOrder> delivery_address;

  final _i1.PrismaNullable<SortOrder> status;

  final _i1.PrismaNullable<UserOrderByWithRelationInput> user;

  final _i1.PrismaNullable<OrderItemOrderByRelationAggregateInput> items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'user': user,
      'items': items,
    };
  }
}

class OrderWhereUniqueInput implements _i1.JsonSerializable {
  const OrderWhereUniqueInput({this.id});

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class OrderOrderByWithAggregationInput implements _i1.JsonSerializable {
  const OrderOrderByWithAggregationInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> user_id;

  final _i1.PrismaNullable<SortOrder> transaction_id;

  final _i1.PrismaNullable<SortOrder> client_cpf;

  final _i1.PrismaNullable<SortOrder> delivery_address;

  final _i1.PrismaNullable<SortOrder> status;

  final _i1.PrismaNullable<OrderCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<OrderAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<OrderMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<OrderMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<OrderSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class OrderScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const OrderScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<List<OrderScalarWhereWithAggregatesInput>> AND;

  final _i1.PrismaNullable<List<OrderScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<List<OrderScalarWhereWithAggregatesInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntWithAggregatesFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntWithAggregatesFilter, int>>
      user_id;

  final _i1
          .PrismaNullable<_i1.PrismaUnion<IntNullableWithAggregatesFilter, int>>
      transaction_id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<StringNullableWithAggregatesFilter, String>> client_cpf;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      delivery_address;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderItemWhereInput implements _i1.JsonSerializable {
  const OrderItemWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
    this.order,
    this.product,
  });

  final _i1.PrismaNullable<List<OrderItemWhereInput>> AND;

  final _i1.PrismaNullable<List<OrderItemWhereInput>> OR;

  final _i1.PrismaNullable<List<OrderItemWhereInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> order_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> product_id;

  final _i1
          .PrismaNullable<_i1.PrismaUnion<OrderRelationFilter, OrderWhereInput>>
      order;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<ProductRelationFilter, ProductWhereInput>> product;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
      'order': order,
      'product': product,
    };
  }
}

class OrderItemOrderByWithRelationInput implements _i1.JsonSerializable {
  const OrderItemOrderByWithRelationInput({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
    this.order,
    this.product,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> quantity;

  final _i1.PrismaNullable<SortOrder> order_id;

  final _i1.PrismaNullable<SortOrder> product_id;

  final _i1.PrismaNullable<OrderOrderByWithRelationInput> order;

  final _i1.PrismaNullable<ProductOrderByWithRelationInput> product;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
      'order': order,
      'product': product,
    };
  }
}

class OrderItemWhereUniqueInput implements _i1.JsonSerializable {
  const OrderItemWhereUniqueInput({this.id});

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class OrderItemOrderByWithAggregationInput implements _i1.JsonSerializable {
  const OrderItemOrderByWithAggregationInput({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> quantity;

  final _i1.PrismaNullable<SortOrder> order_id;

  final _i1.PrismaNullable<SortOrder> product_id;

  final _i1.PrismaNullable<OrderItemCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<OrderItemAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<OrderItemMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<OrderItemMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<OrderItemSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class OrderItemScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const OrderItemScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<List<OrderItemScalarWhereWithAggregatesInput>> AND;

  final _i1.PrismaNullable<List<OrderItemScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<List<OrderItemScalarWhereWithAggregatesInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntWithAggregatesFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringWithAggregatesFilter, String>>
      quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntWithAggregatesFilter, int>>
      order_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntWithAggregatesFilter, int>>
      product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class UserCreateInput implements _i1.JsonSerializable {
  const UserCreateInput({
    required this.email,
    required this.name,
    required this.password,
    this.orders,
  });

  final String email;

  final String name;

  final String password;

  final _i1.PrismaNullable<OrderCreateNestedManyWithoutUserInput> orders;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'name': name,
      'password': password,
      'orders': orders,
    };
  }
}

class UserUncheckedCreateInput implements _i1.JsonSerializable {
  const UserUncheckedCreateInput({
    this.id,
    required this.email,
    required this.name,
    required this.password,
    this.orders,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final String name;

  final String password;

  final _i1.PrismaNullable<OrderUncheckedCreateNestedManyWithoutUserInput>
      orders;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
      'orders': orders,
    };
  }
}

class UserUpdateInput implements _i1.JsonSerializable {
  const UserUpdateInput({
    this.email,
    this.name,
    this.password,
    this.orders,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> email;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> password;

  final _i1.PrismaNullable<OrderUpdateManyWithoutUserNestedInput> orders;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'name': name,
      'password': password,
      'orders': orders,
    };
  }
}

class UserUncheckedUpdateInput implements _i1.JsonSerializable {
  const UserUncheckedUpdateInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.orders,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> email;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> password;

  final _i1.PrismaNullable<OrderUncheckedUpdateManyWithoutUserNestedInput>
      orders;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
      'orders': orders,
    };
  }
}

class UserCreateManyInput implements _i1.JsonSerializable {
  const UserCreateManyInput({
    this.id,
    required this.email,
    required this.name,
    required this.password,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final String name;

  final String password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserUpdateManyMutationInput implements _i1.JsonSerializable {
  const UserUpdateManyMutationInput({
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> email;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const UserUncheckedUpdateManyInput({
    this.id,
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> email;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class ProductCreateInput implements _i1.JsonSerializable {
  const ProductCreateInput({
    required this.name,
    required this.description,
    required this.price,
    this.image,
    this.orderedItems,
  });

  final String name;

  final String description;

  final double price;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> image;

  final _i1.PrismaNullable<OrderItemCreateNestedManyWithoutProductInput>
      orderedItems;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'description': description,
      'price': price,
      'image': image,
      'orderedItems': orderedItems,
    };
  }
}

class ProductUncheckedCreateInput implements _i1.JsonSerializable {
  const ProductUncheckedCreateInput({
    this.id,
    required this.name,
    required this.description,
    required this.price,
    this.image,
    this.orderedItems,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final String description;

  final double price;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> image;

  final _i1
          .PrismaNullable<OrderItemUncheckedCreateNestedManyWithoutProductInput>
      orderedItems;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
      'orderedItems': orderedItems,
    };
  }
}

class ProductUpdateInput implements _i1.JsonSerializable {
  const ProductUpdateInput({
    this.name,
    this.description,
    this.price,
    this.image,
    this.orderedItems,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> description;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, FloatFieldUpdateOperationsInput>> price;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>> image;

  final _i1.PrismaNullable<OrderItemUpdateManyWithoutProductNestedInput>
      orderedItems;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'description': description,
      'price': price,
      'image': image,
      'orderedItems': orderedItems,
    };
  }
}

class ProductUncheckedUpdateInput implements _i1.JsonSerializable {
  const ProductUncheckedUpdateInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
    this.orderedItems,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> description;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, FloatFieldUpdateOperationsInput>> price;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>> image;

  final _i1
          .PrismaNullable<OrderItemUncheckedUpdateManyWithoutProductNestedInput>
      orderedItems;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
      'orderedItems': orderedItems,
    };
  }
}

class ProductCreateManyInput implements _i1.JsonSerializable {
  const ProductCreateManyInput({
    this.id,
    required this.name,
    required this.description,
    required this.price,
    this.image,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final String description;

  final double price;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductUpdateManyMutationInput implements _i1.JsonSerializable {
  const ProductUpdateManyMutationInput({
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> description;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, FloatFieldUpdateOperationsInput>> price;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const ProductUncheckedUpdateManyInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> description;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, FloatFieldUpdateOperationsInput>> price;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class OrderCreateInput implements _i1.JsonSerializable {
  const OrderCreateInput({
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
    required this.user,
    this.items,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  final UserCreateNestedOneWithoutOrdersInput user;

  final _i1.PrismaNullable<OrderItemCreateNestedManyWithoutOrderInput> items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'user': user,
      'items': items,
    };
  }
}

class OrderUncheckedCreateInput implements _i1.JsonSerializable {
  const OrderUncheckedCreateInput({
    this.id,
    required this.user_id,
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
    this.items,
  });

  final _i1.PrismaNullable<int> id;

  final int user_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  final _i1.PrismaNullable<OrderItemUncheckedCreateNestedManyWithoutOrderInput>
      items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'items': items,
    };
  }
}

class OrderUpdateInput implements _i1.JsonSerializable {
  const OrderUpdateInput({
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.user,
    this.items,
  });

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  final _i1.PrismaNullable<UserUpdateOneRequiredWithoutOrdersNestedInput> user;

  final _i1.PrismaNullable<OrderItemUpdateManyWithoutOrderNestedInput> items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'user': user,
      'items': items,
    };
  }
}

class OrderUncheckedUpdateInput implements _i1.JsonSerializable {
  const OrderUncheckedUpdateInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.items,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      user_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  final _i1.PrismaNullable<OrderItemUncheckedUpdateManyWithoutOrderNestedInput>
      items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'items': items,
    };
  }
}

class OrderCreateManyInput implements _i1.JsonSerializable {
  const OrderCreateManyInput({
    this.id,
    required this.user_id,
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<int> id;

  final int user_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderUpdateManyMutationInput implements _i1.JsonSerializable {
  const OrderUpdateManyMutationInput({
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const OrderUncheckedUpdateManyInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      user_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderItemCreateInput implements _i1.JsonSerializable {
  const OrderItemCreateInput({
    required this.quantity,
    required this.order,
    required this.product,
  });

  final String quantity;

  final OrderCreateNestedOneWithoutItemsInput order;

  final ProductCreateNestedOneWithoutOrderedItemsInput product;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'quantity': quantity,
      'order': order,
      'product': product,
    };
  }
}

class OrderItemUncheckedCreateInput implements _i1.JsonSerializable {
  const OrderItemUncheckedCreateInput({
    this.id,
    required this.quantity,
    required this.order_id,
    required this.product_id,
  });

  final _i1.PrismaNullable<int> id;

  final String quantity;

  final int order_id;

  final int product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderItemUpdateInput implements _i1.JsonSerializable {
  const OrderItemUpdateInput({
    this.quantity,
    this.order,
    this.product,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<OrderUpdateOneRequiredWithoutItemsNestedInput> order;

  final _i1.PrismaNullable<
      ProductUpdateOneRequiredWithoutOrderedItemsNestedInput> product;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'quantity': quantity,
      'order': order,
      'product': product,
    };
  }
}

class OrderItemUncheckedUpdateInput implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateInput({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      order_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderItemCreateManyInput implements _i1.JsonSerializable {
  const OrderItemCreateManyInput({
    this.id,
    required this.quantity,
    required this.order_id,
    required this.product_id,
  });

  final _i1.PrismaNullable<int> id;

  final String quantity;

  final int order_id;

  final int product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderItemUpdateManyMutationInput implements _i1.JsonSerializable {
  const OrderItemUpdateManyMutationInput({this.quantity});

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'quantity': quantity,
    };
  }
}

class OrderItemUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateManyInput({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      order_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class IntFilter implements _i1.JsonSerializable {
  const IntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, NestedIntFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class StringFilter implements _i1.JsonSerializable {
  const StringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, NestedStringFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class OrderListRelationFilter implements _i1.JsonSerializable {
  const OrderListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<OrderWhereInput> every;

  final _i1.PrismaNullable<OrderWhereInput> some;

  final _i1.PrismaNullable<OrderWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class OrderOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const OrderOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class UserCountOrderByAggregateInput implements _i1.JsonSerializable {
  const UserCountOrderByAggregateInput({
    this.id,
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const UserAvgOrderByAggregateInput({this.id});

  final _i1.PrismaNullable<SortOrder> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class UserMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const UserMaxOrderByAggregateInput({
    this.id,
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserMinOrderByAggregateInput implements _i1.JsonSerializable {
  const UserMinOrderByAggregateInput({
    this.id,
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserSumOrderByAggregateInput implements _i1.JsonSerializable {
  const UserSumOrderByAggregateInput({this.id});

  final _i1.PrismaNullable<SortOrder> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class IntWithAggregatesFilter implements _i1.JsonSerializable {
  const IntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, NestedIntWithAggregatesFilter>>
      not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedIntFilter> $sum;

  final _i1.PrismaNullable<NestedIntFilter> $min;

  final _i1.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class StringWithAggregatesFilter implements _i1.JsonSerializable {
  const StringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NestedStringWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedStringFilter> $min;

  final _i1.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class FloatFilter implements _i1.JsonSerializable {
  const FloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<double> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<double, NestedFloatFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class StringNullableFilter implements _i1.JsonSerializable {
  const StringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, NestedStringNullableFilter>>
      not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class OrderItemListRelationFilter implements _i1.JsonSerializable {
  const OrderItemListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<OrderItemWhereInput> every;

  final _i1.PrismaNullable<OrderItemWhereInput> some;

  final _i1.PrismaNullable<OrderItemWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class OrderItemOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const OrderItemOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class ProductCountOrderByAggregateInput implements _i1.JsonSerializable {
  const ProductCountOrderByAggregateInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> price;

  final _i1.PrismaNullable<SortOrder> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const ProductAvgOrderByAggregateInput({
    this.id,
    this.price,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> price;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'price': price,
    };
  }
}

class ProductMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const ProductMaxOrderByAggregateInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> price;

  final _i1.PrismaNullable<SortOrder> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductMinOrderByAggregateInput implements _i1.JsonSerializable {
  const ProductMinOrderByAggregateInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> price;

  final _i1.PrismaNullable<SortOrder> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductSumOrderByAggregateInput implements _i1.JsonSerializable {
  const ProductSumOrderByAggregateInput({
    this.id,
    this.price,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> price;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'price': price,
    };
  }
}

class FloatWithAggregatesFilter implements _i1.JsonSerializable {
  const FloatWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<double> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, NestedFloatWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedFloatFilter> $sum;

  final _i1.PrismaNullable<NestedFloatFilter> $min;

  final _i1.PrismaNullable<NestedFloatFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class StringNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const StringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NestedStringNullableWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedStringNullableFilter> $min;

  final _i1.PrismaNullable<NestedStringNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class IntNullableFilter implements _i1.JsonSerializable {
  const IntNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, NestedIntNullableFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class UserRelationFilter implements _i1.JsonSerializable {
  const UserRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i1.PrismaNullable<UserWhereInput> is$;

  final _i1.PrismaNullable<UserWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class OrderCountOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderCountOrderByAggregateInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> user_id;

  final _i1.PrismaNullable<SortOrder> transaction_id;

  final _i1.PrismaNullable<SortOrder> client_cpf;

  final _i1.PrismaNullable<SortOrder> delivery_address;

  final _i1.PrismaNullable<SortOrder> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderAvgOrderByAggregateInput({
    this.id,
    this.user_id,
    this.transaction_id,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> user_id;

  final _i1.PrismaNullable<SortOrder> transaction_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
    };
  }
}

class OrderMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderMaxOrderByAggregateInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> user_id;

  final _i1.PrismaNullable<SortOrder> transaction_id;

  final _i1.PrismaNullable<SortOrder> client_cpf;

  final _i1.PrismaNullable<SortOrder> delivery_address;

  final _i1.PrismaNullable<SortOrder> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderMinOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderMinOrderByAggregateInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> user_id;

  final _i1.PrismaNullable<SortOrder> transaction_id;

  final _i1.PrismaNullable<SortOrder> client_cpf;

  final _i1.PrismaNullable<SortOrder> delivery_address;

  final _i1.PrismaNullable<SortOrder> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderSumOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderSumOrderByAggregateInput({
    this.id,
    this.user_id,
    this.transaction_id,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> user_id;

  final _i1.PrismaNullable<SortOrder> transaction_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
    };
  }
}

class IntNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const IntNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<int, NestedIntNullableWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedFloatNullableFilter> $avg;

  final _i1.PrismaNullable<NestedIntNullableFilter> $sum;

  final _i1.PrismaNullable<NestedIntNullableFilter> $min;

  final _i1.PrismaNullable<NestedIntNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class OrderRelationFilter implements _i1.JsonSerializable {
  const OrderRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i1.PrismaNullable<OrderWhereInput> is$;

  final _i1.PrismaNullable<OrderWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class ProductRelationFilter implements _i1.JsonSerializable {
  const ProductRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i1.PrismaNullable<ProductWhereInput> is$;

  final _i1.PrismaNullable<ProductWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class OrderItemCountOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderItemCountOrderByAggregateInput({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> quantity;

  final _i1.PrismaNullable<SortOrder> order_id;

  final _i1.PrismaNullable<SortOrder> product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderItemAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderItemAvgOrderByAggregateInput({
    this.id,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> order_id;

  final _i1.PrismaNullable<SortOrder> product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderItemMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderItemMaxOrderByAggregateInput({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> quantity;

  final _i1.PrismaNullable<SortOrder> order_id;

  final _i1.PrismaNullable<SortOrder> product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderItemMinOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderItemMinOrderByAggregateInput({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> quantity;

  final _i1.PrismaNullable<SortOrder> order_id;

  final _i1.PrismaNullable<SortOrder> product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderItemSumOrderByAggregateInput implements _i1.JsonSerializable {
  const OrderItemSumOrderByAggregateInput({
    this.id,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> order_id;

  final _i1.PrismaNullable<SortOrder> product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class OrderCreateNestedManyWithoutUserInput implements _i1.JsonSerializable {
  const OrderCreateNestedManyWithoutUserInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<List<OrderCreateWithoutUserInput>> create;

  final _i1.PrismaNullable<List<OrderCreateOrConnectWithoutUserInput>>
      connectOrCreate;

  final _i1.PrismaNullable<OrderCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class OrderUncheckedCreateNestedManyWithoutUserInput
    implements _i1.JsonSerializable {
  const OrderUncheckedCreateNestedManyWithoutUserInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<List<OrderCreateWithoutUserInput>> create;

  final _i1.PrismaNullable<List<OrderCreateOrConnectWithoutUserInput>>
      connectOrCreate;

  final _i1.PrismaNullable<OrderCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class StringFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const StringFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<String> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class OrderUpdateManyWithoutUserNestedInput implements _i1.JsonSerializable {
  const OrderUpdateManyWithoutUserNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<List<OrderCreateWithoutUserInput>> create;

  final _i1.PrismaNullable<List<OrderCreateOrConnectWithoutUserInput>>
      connectOrCreate;

  final _i1.PrismaNullable<List<OrderUpsertWithWhereUniqueWithoutUserInput>>
      upsert;

  final _i1.PrismaNullable<OrderCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> set$;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> disconnect;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> delete;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> connect;

  final _i1.PrismaNullable<List<OrderUpdateWithWhereUniqueWithoutUserInput>>
      update;

  final _i1.PrismaNullable<List<OrderUpdateManyWithWhereWithoutUserInput>>
      updateMany;

  final _i1.PrismaNullable<List<OrderScalarWhereInput>> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class IntFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const IntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i1.PrismaNullable<int> set$;

  final _i1.PrismaNullable<int> increment;

  final _i1.PrismaNullable<int> decrement;

  final _i1.PrismaNullable<int> multiply;

  final _i1.PrismaNullable<int> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class OrderUncheckedUpdateManyWithoutUserNestedInput
    implements _i1.JsonSerializable {
  const OrderUncheckedUpdateManyWithoutUserNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<List<OrderCreateWithoutUserInput>> create;

  final _i1.PrismaNullable<List<OrderCreateOrConnectWithoutUserInput>>
      connectOrCreate;

  final _i1.PrismaNullable<List<OrderUpsertWithWhereUniqueWithoutUserInput>>
      upsert;

  final _i1.PrismaNullable<OrderCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> set$;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> disconnect;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> delete;

  final _i1.PrismaNullable<List<OrderWhereUniqueInput>> connect;

  final _i1.PrismaNullable<List<OrderUpdateWithWhereUniqueWithoutUserInput>>
      update;

  final _i1.PrismaNullable<List<OrderUpdateManyWithWhereWithoutUserInput>>
      updateMany;

  final _i1.PrismaNullable<List<OrderScalarWhereInput>> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class OrderItemCreateNestedManyWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemCreateNestedManyWithoutProductInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutProductInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutProductInput>>
      connectOrCreate;

  final _i1.PrismaNullable<OrderItemCreateManyProductInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class OrderItemUncheckedCreateNestedManyWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedCreateNestedManyWithoutProductInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutProductInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutProductInput>>
      connectOrCreate;

  final _i1.PrismaNullable<OrderItemCreateManyProductInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class FloatFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const FloatFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i1.PrismaNullable<double> set$;

  final _i1.PrismaNullable<double> increment;

  final _i1.PrismaNullable<double> decrement;

  final _i1.PrismaNullable<double> multiply;

  final _i1.PrismaNullable<double> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class NullableStringFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const NullableStringFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class OrderItemUpdateManyWithoutProductNestedInput
    implements _i1.JsonSerializable {
  const OrderItemUpdateManyWithoutProductNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutProductInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutProductInput>>
      connectOrCreate;

  final _i1.PrismaNullable<
      List<OrderItemUpsertWithWhereUniqueWithoutProductInput>> upsert;

  final _i1.PrismaNullable<OrderItemCreateManyProductInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> set$;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> disconnect;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> delete;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  final _i1.PrismaNullable<
      List<OrderItemUpdateWithWhereUniqueWithoutProductInput>> update;

  final _i1
          .PrismaNullable<List<OrderItemUpdateManyWithWhereWithoutProductInput>>
      updateMany;

  final _i1.PrismaNullable<List<OrderItemScalarWhereInput>> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class OrderItemUncheckedUpdateManyWithoutProductNestedInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateManyWithoutProductNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutProductInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutProductInput>>
      connectOrCreate;

  final _i1.PrismaNullable<
      List<OrderItemUpsertWithWhereUniqueWithoutProductInput>> upsert;

  final _i1.PrismaNullable<OrderItemCreateManyProductInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> set$;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> disconnect;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> delete;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  final _i1.PrismaNullable<
      List<OrderItemUpdateWithWhereUniqueWithoutProductInput>> update;

  final _i1
          .PrismaNullable<List<OrderItemUpdateManyWithWhereWithoutProductInput>>
      updateMany;

  final _i1.PrismaNullable<List<OrderItemScalarWhereInput>> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class UserCreateNestedOneWithoutOrdersInput implements _i1.JsonSerializable {
  const UserCreateNestedOneWithoutOrdersInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<UserCreateWithoutOrdersInput,
          UserUncheckedCreateWithoutOrdersInput>> create;

  final _i1.PrismaNullable<UserCreateOrConnectWithoutOrdersInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class OrderItemCreateNestedManyWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemCreateNestedManyWithoutOrderInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutOrderInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutOrderInput>>
      connectOrCreate;

  final _i1.PrismaNullable<OrderItemCreateManyOrderInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class OrderItemUncheckedCreateNestedManyWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedCreateNestedManyWithoutOrderInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutOrderInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutOrderInput>>
      connectOrCreate;

  final _i1.PrismaNullable<OrderItemCreateManyOrderInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class NullableIntFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const NullableIntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> set$;

  final _i1.PrismaNullable<int> increment;

  final _i1.PrismaNullable<int> decrement;

  final _i1.PrismaNullable<int> multiply;

  final _i1.PrismaNullable<int> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class UserUpdateOneRequiredWithoutOrdersNestedInput
    implements _i1.JsonSerializable {
  const UserUpdateOneRequiredWithoutOrdersNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<UserCreateWithoutOrdersInput,
          UserUncheckedCreateWithoutOrdersInput>> create;

  final _i1.PrismaNullable<UserCreateOrConnectWithoutOrdersInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserUpsertWithoutOrdersInput> upsert;

  final _i1.PrismaNullable<UserWhereUniqueInput> connect;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<UserUpdateWithoutOrdersInput,
          UserUncheckedUpdateWithoutOrdersInput>> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class OrderItemUpdateManyWithoutOrderNestedInput
    implements _i1.JsonSerializable {
  const OrderItemUpdateManyWithoutOrderNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutOrderInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutOrderInput>>
      connectOrCreate;

  final _i1
          .PrismaNullable<List<OrderItemUpsertWithWhereUniqueWithoutOrderInput>>
      upsert;

  final _i1.PrismaNullable<OrderItemCreateManyOrderInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> set$;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> disconnect;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> delete;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  final _i1
          .PrismaNullable<List<OrderItemUpdateWithWhereUniqueWithoutOrderInput>>
      update;

  final _i1.PrismaNullable<List<OrderItemUpdateManyWithWhereWithoutOrderInput>>
      updateMany;

  final _i1.PrismaNullable<List<OrderItemScalarWhereInput>> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateManyWithoutOrderNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<List<OrderItemCreateWithoutOrderInput>> create;

  final _i1.PrismaNullable<List<OrderItemCreateOrConnectWithoutOrderInput>>
      connectOrCreate;

  final _i1
          .PrismaNullable<List<OrderItemUpsertWithWhereUniqueWithoutOrderInput>>
      upsert;

  final _i1.PrismaNullable<OrderItemCreateManyOrderInputEnvelope> createMany;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> set$;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> disconnect;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> delete;

  final _i1.PrismaNullable<List<OrderItemWhereUniqueInput>> connect;

  final _i1
          .PrismaNullable<List<OrderItemUpdateWithWhereUniqueWithoutOrderInput>>
      update;

  final _i1.PrismaNullable<List<OrderItemUpdateManyWithWhereWithoutOrderInput>>
      updateMany;

  final _i1.PrismaNullable<List<OrderItemScalarWhereInput>> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class OrderCreateNestedOneWithoutItemsInput implements _i1.JsonSerializable {
  const OrderCreateNestedOneWithoutItemsInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<OrderCreateWithoutItemsInput,
          OrderUncheckedCreateWithoutItemsInput>> create;

  final _i1.PrismaNullable<OrderCreateOrConnectWithoutItemsInput>
      connectOrCreate;

  final _i1.PrismaNullable<OrderWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class ProductCreateNestedOneWithoutOrderedItemsInput
    implements _i1.JsonSerializable {
  const ProductCreateNestedOneWithoutOrderedItemsInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<ProductCreateWithoutOrderedItemsInput,
          ProductUncheckedCreateWithoutOrderedItemsInput>> create;

  final _i1.PrismaNullable<ProductCreateOrConnectWithoutOrderedItemsInput>
      connectOrCreate;

  final _i1.PrismaNullable<ProductWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class OrderUpdateOneRequiredWithoutItemsNestedInput
    implements _i1.JsonSerializable {
  const OrderUpdateOneRequiredWithoutItemsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<OrderCreateWithoutItemsInput,
          OrderUncheckedCreateWithoutItemsInput>> create;

  final _i1.PrismaNullable<OrderCreateOrConnectWithoutItemsInput>
      connectOrCreate;

  final _i1.PrismaNullable<OrderUpsertWithoutItemsInput> upsert;

  final _i1.PrismaNullable<OrderWhereUniqueInput> connect;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<OrderUpdateWithoutItemsInput,
          OrderUncheckedUpdateWithoutItemsInput>> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class ProductUpdateOneRequiredWithoutOrderedItemsNestedInput
    implements _i1.JsonSerializable {
  const ProductUpdateOneRequiredWithoutOrderedItemsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<ProductCreateWithoutOrderedItemsInput,
          ProductUncheckedCreateWithoutOrderedItemsInput>> create;

  final _i1.PrismaNullable<ProductCreateOrConnectWithoutOrderedItemsInput>
      connectOrCreate;

  final _i1.PrismaNullable<ProductUpsertWithoutOrderedItemsInput> upsert;

  final _i1.PrismaNullable<ProductWhereUniqueInput> connect;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<ProductUpdateWithoutOrderedItemsInput,
          ProductUncheckedUpdateWithoutOrderedItemsInput>> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class NestedIntFilter implements _i1.JsonSerializable {
  const NestedIntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, NestedIntFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringFilter implements _i1.JsonSerializable {
  const NestedStringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, NestedStringFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class NestedIntWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedIntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, NestedIntWithAggregatesFilter>>
      not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedIntFilter> $sum;

  final _i1.PrismaNullable<NestedIntFilter> $min;

  final _i1.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedFloatFilter implements _i1.JsonSerializable {
  const NestedFloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<double> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<double, NestedFloatFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedStringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NestedStringWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedStringFilter> $min;

  final _i1.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedStringNullableFilter implements _i1.JsonSerializable {
  const NestedStringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, NestedStringNullableFilter>>
      not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class NestedFloatWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedFloatWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<double> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, NestedFloatWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedFloatFilter> $sum;

  final _i1.PrismaNullable<NestedFloatFilter> $min;

  final _i1.PrismaNullable<NestedFloatFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedStringNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedStringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NestedStringNullableWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedStringNullableFilter> $min;

  final _i1.PrismaNullable<NestedStringNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedIntNullableFilter implements _i1.JsonSerializable {
  const NestedIntNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, NestedIntNullableFilter>> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedIntNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedIntNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<int, NestedIntNullableWithAggregatesFilter>> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedFloatNullableFilter> $avg;

  final _i1.PrismaNullable<NestedIntNullableFilter> $sum;

  final _i1.PrismaNullable<NestedIntNullableFilter> $min;

  final _i1.PrismaNullable<NestedIntNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedFloatNullableFilter implements _i1.JsonSerializable {
  const NestedFloatNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<double, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<_i1.PrismaUnion<double, NestedFloatNullableFilter>>
      not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class OrderCreateWithoutUserInput implements _i1.JsonSerializable {
  const OrderCreateWithoutUserInput({
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
    this.items,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  final _i1.PrismaNullable<OrderItemCreateNestedManyWithoutOrderInput> items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'items': items,
    };
  }
}

class OrderUncheckedCreateWithoutUserInput implements _i1.JsonSerializable {
  const OrderUncheckedCreateWithoutUserInput({
    this.id,
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
    this.items,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  final _i1.PrismaNullable<OrderItemUncheckedCreateNestedManyWithoutOrderInput>
      items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'items': items,
    };
  }
}

class OrderCreateOrConnectWithoutUserInput implements _i1.JsonSerializable {
  const OrderCreateOrConnectWithoutUserInput({
    required this.where,
    required this.create,
  });

  final OrderWhereUniqueInput where;

  final _i1.PrismaUnion<OrderCreateWithoutUserInput,
      OrderUncheckedCreateWithoutUserInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class OrderCreateManyUserInputEnvelope implements _i1.JsonSerializable {
  const OrderCreateManyUserInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<OrderCreateManyUserInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class OrderUpsertWithWhereUniqueWithoutUserInput
    implements _i1.JsonSerializable {
  const OrderUpsertWithWhereUniqueWithoutUserInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final OrderWhereUniqueInput where;

  final _i1.PrismaUnion<OrderUpdateWithoutUserInput,
      OrderUncheckedUpdateWithoutUserInput> update;

  final _i1.PrismaUnion<OrderCreateWithoutUserInput,
      OrderUncheckedCreateWithoutUserInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class OrderUpdateWithWhereUniqueWithoutUserInput
    implements _i1.JsonSerializable {
  const OrderUpdateWithWhereUniqueWithoutUserInput({
    required this.where,
    required this.data,
  });

  final OrderWhereUniqueInput where;

  final _i1.PrismaUnion<OrderUpdateWithoutUserInput,
      OrderUncheckedUpdateWithoutUserInput> data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class OrderUpdateManyWithWhereWithoutUserInput implements _i1.JsonSerializable {
  const OrderUpdateManyWithWhereWithoutUserInput({
    required this.where,
    required this.data,
  });

  final OrderScalarWhereInput where;

  final _i1.PrismaUnion<OrderUpdateManyMutationInput,
      OrderUncheckedUpdateManyWithoutOrdersInput> data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class OrderScalarWhereInput implements _i1.JsonSerializable {
  const OrderScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<List<OrderScalarWhereInput>> AND;

  final _i1.PrismaNullable<List<OrderScalarWhereInput>> OR;

  final _i1.PrismaNullable<List<OrderScalarWhereInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> user_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntNullableFilter, int>>
      transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringNullableFilter, String>>
      client_cpf;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>>
      delivery_address;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderItemCreateWithoutProductInput implements _i1.JsonSerializable {
  const OrderItemCreateWithoutProductInput({
    required this.quantity,
    required this.order,
  });

  final String quantity;

  final OrderCreateNestedOneWithoutItemsInput order;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'quantity': quantity,
      'order': order,
    };
  }
}

class OrderItemUncheckedCreateWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedCreateWithoutProductInput({
    this.id,
    required this.quantity,
    required this.order_id,
  });

  final _i1.PrismaNullable<int> id;

  final String quantity;

  final int order_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
    };
  }
}

class OrderItemCreateOrConnectWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemCreateOrConnectWithoutProductInput({
    required this.where,
    required this.create,
  });

  final OrderItemWhereUniqueInput where;

  final _i1.PrismaUnion<OrderItemCreateWithoutProductInput,
      OrderItemUncheckedCreateWithoutProductInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class OrderItemCreateManyProductInputEnvelope implements _i1.JsonSerializable {
  const OrderItemCreateManyProductInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<OrderItemCreateManyProductInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class OrderItemUpsertWithWhereUniqueWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemUpsertWithWhereUniqueWithoutProductInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final OrderItemWhereUniqueInput where;

  final _i1.PrismaUnion<OrderItemUpdateWithoutProductInput,
      OrderItemUncheckedUpdateWithoutProductInput> update;

  final _i1.PrismaUnion<OrderItemCreateWithoutProductInput,
      OrderItemUncheckedCreateWithoutProductInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class OrderItemUpdateWithWhereUniqueWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemUpdateWithWhereUniqueWithoutProductInput({
    required this.where,
    required this.data,
  });

  final OrderItemWhereUniqueInput where;

  final _i1.PrismaUnion<OrderItemUpdateWithoutProductInput,
      OrderItemUncheckedUpdateWithoutProductInput> data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class OrderItemUpdateManyWithWhereWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemUpdateManyWithWhereWithoutProductInput({
    required this.where,
    required this.data,
  });

  final OrderItemScalarWhereInput where;

  final _i1.PrismaUnion<OrderItemUpdateManyMutationInput,
      OrderItemUncheckedUpdateManyWithoutOrderedItemsInput> data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class OrderItemScalarWhereInput implements _i1.JsonSerializable {
  const OrderItemScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  final _i1.PrismaNullable<List<OrderItemScalarWhereInput>> AND;

  final _i1.PrismaNullable<List<OrderItemScalarWhereInput>> OR;

  final _i1.PrismaNullable<List<OrderItemScalarWhereInput>> NOT;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<StringFilter, String>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> order_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<IntFilter, int>> product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
      'product_id': product_id,
    };
  }
}

class UserCreateWithoutOrdersInput implements _i1.JsonSerializable {
  const UserCreateWithoutOrdersInput({
    required this.email,
    required this.name,
    required this.password,
  });

  final String email;

  final String name;

  final String password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserUncheckedCreateWithoutOrdersInput implements _i1.JsonSerializable {
  const UserUncheckedCreateWithoutOrdersInput({
    this.id,
    required this.email,
    required this.name,
    required this.password,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final String name;

  final String password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserCreateOrConnectWithoutOrdersInput implements _i1.JsonSerializable {
  const UserCreateOrConnectWithoutOrdersInput({
    required this.where,
    required this.create,
  });

  final UserWhereUniqueInput where;

  final _i1.PrismaUnion<UserCreateWithoutOrdersInput,
      UserUncheckedCreateWithoutOrdersInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class OrderItemCreateWithoutOrderInput implements _i1.JsonSerializable {
  const OrderItemCreateWithoutOrderInput({
    required this.quantity,
    required this.product,
  });

  final String quantity;

  final ProductCreateNestedOneWithoutOrderedItemsInput product;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'quantity': quantity,
      'product': product,
    };
  }
}

class OrderItemUncheckedCreateWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedCreateWithoutOrderInput({
    this.id,
    required this.quantity,
    required this.product_id,
  });

  final _i1.PrismaNullable<int> id;

  final String quantity;

  final int product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'product_id': product_id,
    };
  }
}

class OrderItemCreateOrConnectWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemCreateOrConnectWithoutOrderInput({
    required this.where,
    required this.create,
  });

  final OrderItemWhereUniqueInput where;

  final _i1.PrismaUnion<OrderItemCreateWithoutOrderInput,
      OrderItemUncheckedCreateWithoutOrderInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class OrderItemCreateManyOrderInputEnvelope implements _i1.JsonSerializable {
  const OrderItemCreateManyOrderInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<OrderItemCreateManyOrderInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class UserUpsertWithoutOrdersInput implements _i1.JsonSerializable {
  const UserUpsertWithoutOrdersInput({
    required this.update,
    required this.create,
  });

  final _i1.PrismaUnion<UserUpdateWithoutOrdersInput,
      UserUncheckedUpdateWithoutOrdersInput> update;

  final _i1.PrismaUnion<UserCreateWithoutOrdersInput,
      UserUncheckedCreateWithoutOrdersInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class UserUpdateWithoutOrdersInput implements _i1.JsonSerializable {
  const UserUpdateWithoutOrdersInput({
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> email;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class UserUncheckedUpdateWithoutOrdersInput implements _i1.JsonSerializable {
  const UserUncheckedUpdateWithoutOrdersInput({
    this.id,
    this.email,
    this.name,
    this.password,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> email;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> password;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'name': name,
      'password': password,
    };
  }
}

class OrderItemUpsertWithWhereUniqueWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemUpsertWithWhereUniqueWithoutOrderInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final OrderItemWhereUniqueInput where;

  final _i1.PrismaUnion<OrderItemUpdateWithoutOrderInput,
      OrderItemUncheckedUpdateWithoutOrderInput> update;

  final _i1.PrismaUnion<OrderItemCreateWithoutOrderInput,
      OrderItemUncheckedCreateWithoutOrderInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class OrderItemUpdateWithWhereUniqueWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemUpdateWithWhereUniqueWithoutOrderInput({
    required this.where,
    required this.data,
  });

  final OrderItemWhereUniqueInput where;

  final _i1.PrismaUnion<OrderItemUpdateWithoutOrderInput,
      OrderItemUncheckedUpdateWithoutOrderInput> data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class OrderItemUpdateManyWithWhereWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemUpdateManyWithWhereWithoutOrderInput({
    required this.where,
    required this.data,
  });

  final OrderItemScalarWhereInput where;

  final _i1.PrismaUnion<OrderItemUpdateManyMutationInput,
      OrderItemUncheckedUpdateManyWithoutItemsInput> data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class OrderCreateWithoutItemsInput implements _i1.JsonSerializable {
  const OrderCreateWithoutItemsInput({
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
    required this.user,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  final UserCreateNestedOneWithoutOrdersInput user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'user': user,
    };
  }
}

class OrderUncheckedCreateWithoutItemsInput implements _i1.JsonSerializable {
  const OrderUncheckedCreateWithoutItemsInput({
    this.id,
    required this.user_id,
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<int> id;

  final int user_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderCreateOrConnectWithoutItemsInput implements _i1.JsonSerializable {
  const OrderCreateOrConnectWithoutItemsInput({
    required this.where,
    required this.create,
  });

  final OrderWhereUniqueInput where;

  final _i1.PrismaUnion<OrderCreateWithoutItemsInput,
      OrderUncheckedCreateWithoutItemsInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class ProductCreateWithoutOrderedItemsInput implements _i1.JsonSerializable {
  const ProductCreateWithoutOrderedItemsInput({
    required this.name,
    required this.description,
    required this.price,
    this.image,
  });

  final String name;

  final String description;

  final double price;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductUncheckedCreateWithoutOrderedItemsInput
    implements _i1.JsonSerializable {
  const ProductUncheckedCreateWithoutOrderedItemsInput({
    this.id,
    required this.name,
    required this.description,
    required this.price,
    this.image,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final String description;

  final double price;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductCreateOrConnectWithoutOrderedItemsInput
    implements _i1.JsonSerializable {
  const ProductCreateOrConnectWithoutOrderedItemsInput({
    required this.where,
    required this.create,
  });

  final ProductWhereUniqueInput where;

  final _i1.PrismaUnion<ProductCreateWithoutOrderedItemsInput,
      ProductUncheckedCreateWithoutOrderedItemsInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class OrderUpsertWithoutItemsInput implements _i1.JsonSerializable {
  const OrderUpsertWithoutItemsInput({
    required this.update,
    required this.create,
  });

  final _i1.PrismaUnion<OrderUpdateWithoutItemsInput,
      OrderUncheckedUpdateWithoutItemsInput> update;

  final _i1.PrismaUnion<OrderCreateWithoutItemsInput,
      OrderUncheckedCreateWithoutItemsInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class OrderUpdateWithoutItemsInput implements _i1.JsonSerializable {
  const OrderUpdateWithoutItemsInput({
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.user,
  });

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  final _i1.PrismaNullable<UserUpdateOneRequiredWithoutOrdersNestedInput> user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'user': user,
    };
  }
}

class OrderUncheckedUpdateWithoutItemsInput implements _i1.JsonSerializable {
  const OrderUncheckedUpdateWithoutItemsInput({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      user_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'user_id': user_id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class ProductUpsertWithoutOrderedItemsInput implements _i1.JsonSerializable {
  const ProductUpsertWithoutOrderedItemsInput({
    required this.update,
    required this.create,
  });

  final _i1.PrismaUnion<ProductUpdateWithoutOrderedItemsInput,
      ProductUncheckedUpdateWithoutOrderedItemsInput> update;

  final _i1.PrismaUnion<ProductCreateWithoutOrderedItemsInput,
      ProductUncheckedCreateWithoutOrderedItemsInput> create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class ProductUpdateWithoutOrderedItemsInput implements _i1.JsonSerializable {
  const ProductUpdateWithoutOrderedItemsInput({
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> description;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, FloatFieldUpdateOperationsInput>> price;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class ProductUncheckedUpdateWithoutOrderedItemsInput
    implements _i1.JsonSerializable {
  const ProductUncheckedUpdateWithoutOrderedItemsInput({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> name;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> description;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<double, FloatFieldUpdateOperationsInput>> price;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>> image;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'price': price,
      'image': image,
    };
  }
}

class OrderCreateManyUserInput implements _i1.JsonSerializable {
  const OrderCreateManyUserInput({
    this.id,
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> transaction_id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> client_cpf;

  final String delivery_address;

  final _i1.PrismaNullable<String> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderUpdateWithoutUserInput implements _i1.JsonSerializable {
  const OrderUpdateWithoutUserInput({
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.items,
  });

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  final _i1.PrismaNullable<OrderItemUpdateManyWithoutOrderNestedInput> items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'items': items,
    };
  }
}

class OrderUncheckedUpdateWithoutUserInput implements _i1.JsonSerializable {
  const OrderUncheckedUpdateWithoutUserInput({
    this.id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
    this.items,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  final _i1.PrismaNullable<OrderItemUncheckedUpdateManyWithoutOrderNestedInput>
      items;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
      'items': items,
    };
  }
}

class OrderUncheckedUpdateManyWithoutOrdersInput
    implements _i1.JsonSerializable {
  const OrderUncheckedUpdateManyWithoutOrdersInput({
    this.id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<int, NullableIntFieldUpdateOperationsInput>>
      transaction_id;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>>
      client_cpf;

  final _i1.PrismaNullable<
          _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>>
      delivery_address;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> status;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'transaction_id': transaction_id,
      'client_cpf': client_cpf,
      'delivery_address': delivery_address,
      'status': status,
    };
  }
}

class OrderItemCreateManyProductInput implements _i1.JsonSerializable {
  const OrderItemCreateManyProductInput({
    this.id,
    required this.quantity,
    required this.order_id,
  });

  final _i1.PrismaNullable<int> id;

  final String quantity;

  final int order_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
    };
  }
}

class OrderItemUpdateWithoutProductInput implements _i1.JsonSerializable {
  const OrderItemUpdateWithoutProductInput({
    this.quantity,
    this.order,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<OrderUpdateOneRequiredWithoutItemsNestedInput> order;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'quantity': quantity,
      'order': order,
    };
  }
}

class OrderItemUncheckedUpdateWithoutProductInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateWithoutProductInput({
    this.id,
    this.quantity,
    this.order_id,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      order_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
    };
  }
}

class OrderItemUncheckedUpdateManyWithoutOrderedItemsInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateManyWithoutOrderedItemsInput({
    this.id,
    this.quantity,
    this.order_id,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      order_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'order_id': order_id,
    };
  }
}

class OrderItemCreateManyOrderInput implements _i1.JsonSerializable {
  const OrderItemCreateManyOrderInput({
    this.id,
    required this.quantity,
    required this.product_id,
  });

  final _i1.PrismaNullable<int> id;

  final String quantity;

  final int product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'product_id': product_id,
    };
  }
}

class OrderItemUpdateWithoutOrderInput implements _i1.JsonSerializable {
  const OrderItemUpdateWithoutOrderInput({
    this.quantity,
    this.product,
  });

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<
      ProductUpdateOneRequiredWithoutOrderedItemsNestedInput> product;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'quantity': quantity,
      'product': product,
    };
  }
}

class OrderItemUncheckedUpdateWithoutOrderInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateWithoutOrderInput({
    this.id,
    this.quantity,
    this.product_id,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'product_id': product_id,
    };
  }
}

class OrderItemUncheckedUpdateManyWithoutItemsInput
    implements _i1.JsonSerializable {
  const OrderItemUncheckedUpdateManyWithoutItemsInput({
    this.id,
    this.quantity,
    this.product_id,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      id;

  final _i1.PrismaNullable<
      _i1.PrismaUnion<String, StringFieldUpdateOperationsInput>> quantity;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, IntFieldUpdateOperationsInput>>
      product_id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'quantity': quantity,
      'product_id': product_id,
    };
  }
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateUser implements _i1.JsonSerializable {
  const AggregateUser({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateUser.fromJson(Map<String, dynamic> json) =>
      _$AggregateUserFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UserCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UserMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UserMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateUserToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserGroupByOutputType implements _i1.JsonSerializable {
  const UserGroupByOutputType({
    required this.id,
    required this.email,
    required this.name,
    required this.password,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory UserGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserGroupByOutputTypeFromJson(json);

  final int id;

  final String email;

  final String name;

  final String password;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UserCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UserMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UserMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$UserGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateProduct implements _i1.JsonSerializable {
  const AggregateProduct({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateProduct.fromJson(Map<String, dynamic> json) =>
      _$AggregateProductFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<ProductCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<ProductAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<ProductSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<ProductMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<ProductMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateProductToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProductGroupByOutputType implements _i1.JsonSerializable {
  const ProductGroupByOutputType({
    required this.id,
    required this.name,
    required this.description,
    required this.price,
    this.image,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory ProductGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProductGroupByOutputTypeFromJson(json);

  final int id;

  final String name;

  final String description;

  final double price;

  final _i1.PrismaNullable<String> image;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<ProductCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<ProductAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<ProductSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<ProductMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<ProductMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$ProductGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateOrder implements _i1.JsonSerializable {
  const AggregateOrder({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateOrder.fromJson(Map<String, dynamic> json) =>
      _$AggregateOrderFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<OrderCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<OrderAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<OrderSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<OrderMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<OrderMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateOrderToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderGroupByOutputType implements _i1.JsonSerializable {
  const OrderGroupByOutputType({
    required this.id,
    required this.user_id,
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    required this.status,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory OrderGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderGroupByOutputTypeFromJson(json);

  final int id;

  final int user_id;

  final _i1.PrismaNullable<int> transaction_id;

  final _i1.PrismaNullable<String> client_cpf;

  final String delivery_address;

  final String status;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<OrderCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<OrderAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<OrderSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<OrderMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<OrderMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$OrderGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateOrderItem implements _i1.JsonSerializable {
  const AggregateOrderItem({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateOrderItem.fromJson(Map<String, dynamic> json) =>
      _$AggregateOrderItemFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<OrderItemCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<OrderItemAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<OrderItemSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<OrderItemMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<OrderItemMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateOrderItemToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderItemGroupByOutputType implements _i1.JsonSerializable {
  const OrderItemGroupByOutputType({
    required this.id,
    required this.quantity,
    required this.order_id,
    required this.product_id,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory OrderItemGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderItemGroupByOutputTypeFromJson(json);

  final int id;

  final String quantity;

  final int order_id;

  final int product_id;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<OrderItemCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<OrderItemAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<OrderItemSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<OrderItemMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<OrderItemMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$OrderItemGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AffectedRowsOutput implements _i1.JsonSerializable {
  const AffectedRowsOutput({required this.count});

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  final int count;

  @override
  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserCountOutputType implements _i1.JsonSerializable {
  const UserCountOutputType({required this.orders});

  factory UserCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountOutputTypeFromJson(json);

  final int orders;

  @override
  Map<String, dynamic> toJson() => _$UserCountOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserCountAggregateOutputType implements _i1.JsonSerializable {
  const UserCountAggregateOutputType({
    required this.id,
    required this.email,
    required this.name,
    required this.password,
    required this.$all,
  });

  factory UserCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountAggregateOutputTypeFromJson(json);

  final int id;

  final int email;

  final int name;

  final int password;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$UserCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserAvgAggregateOutputType implements _i1.JsonSerializable {
  const UserAvgAggregateOutputType({this.id});

  factory UserAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  @override
  Map<String, dynamic> toJson() => _$UserAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSumAggregateOutputType implements _i1.JsonSerializable {
  const UserSumAggregateOutputType({this.id});

  factory UserSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() => _$UserSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserMinAggregateOutputType implements _i1.JsonSerializable {
  const UserMinAggregateOutputType({
    this.id,
    this.email,
    this.name,
    this.password,
  });

  factory UserMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> password;

  @override
  Map<String, dynamic> toJson() => _$UserMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserMaxAggregateOutputType implements _i1.JsonSerializable {
  const UserMaxAggregateOutputType({
    this.id,
    this.email,
    this.name,
    this.password,
  });

  factory UserMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> password;

  @override
  Map<String, dynamic> toJson() => _$UserMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProductCountOutputType implements _i1.JsonSerializable {
  const ProductCountOutputType({required this.orderedItems});

  factory ProductCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProductCountOutputTypeFromJson(json);

  final int orderedItems;

  @override
  Map<String, dynamic> toJson() => _$ProductCountOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProductCountAggregateOutputType implements _i1.JsonSerializable {
  const ProductCountAggregateOutputType({
    required this.id,
    required this.name,
    required this.description,
    required this.price,
    required this.image,
    required this.$all,
  });

  factory ProductCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProductCountAggregateOutputTypeFromJson(json);

  final int id;

  final int name;

  final int description;

  final int price;

  final int image;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$ProductCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProductAvgAggregateOutputType implements _i1.JsonSerializable {
  const ProductAvgAggregateOutputType({
    this.id,
    this.price,
  });

  factory ProductAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProductAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> price;

  @override
  Map<String, dynamic> toJson() => _$ProductAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProductSumAggregateOutputType implements _i1.JsonSerializable {
  const ProductSumAggregateOutputType({
    this.id,
    this.price,
  });

  factory ProductSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProductSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<double> price;

  @override
  Map<String, dynamic> toJson() => _$ProductSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProductMinAggregateOutputType implements _i1.JsonSerializable {
  const ProductMinAggregateOutputType({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  factory ProductMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProductMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<double> price;

  final _i1.PrismaNullable<String> image;

  @override
  Map<String, dynamic> toJson() => _$ProductMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProductMaxAggregateOutputType implements _i1.JsonSerializable {
  const ProductMaxAggregateOutputType({
    this.id,
    this.name,
    this.description,
    this.price,
    this.image,
  });

  factory ProductMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProductMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<double> price;

  final _i1.PrismaNullable<String> image;

  @override
  Map<String, dynamic> toJson() => _$ProductMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderCountOutputType implements _i1.JsonSerializable {
  const OrderCountOutputType({required this.items});

  factory OrderCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderCountOutputTypeFromJson(json);

  final int items;

  @override
  Map<String, dynamic> toJson() => _$OrderCountOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderCountAggregateOutputType implements _i1.JsonSerializable {
  const OrderCountAggregateOutputType({
    required this.id,
    required this.user_id,
    required this.transaction_id,
    required this.client_cpf,
    required this.delivery_address,
    required this.status,
    required this.$all,
  });

  factory OrderCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderCountAggregateOutputTypeFromJson(json);

  final int id;

  final int user_id;

  final int transaction_id;

  final int client_cpf;

  final int delivery_address;

  final int status;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$OrderCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderAvgAggregateOutputType implements _i1.JsonSerializable {
  const OrderAvgAggregateOutputType({
    this.id,
    this.user_id,
    this.transaction_id,
  });

  factory OrderAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> user_id;

  final _i1.PrismaNullable<double> transaction_id;

  @override
  Map<String, dynamic> toJson() => _$OrderAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderSumAggregateOutputType implements _i1.JsonSerializable {
  const OrderSumAggregateOutputType({
    this.id,
    this.user_id,
    this.transaction_id,
  });

  factory OrderSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> user_id;

  final _i1.PrismaNullable<int> transaction_id;

  @override
  Map<String, dynamic> toJson() => _$OrderSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderMinAggregateOutputType implements _i1.JsonSerializable {
  const OrderMinAggregateOutputType({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  factory OrderMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> user_id;

  final _i1.PrismaNullable<int> transaction_id;

  final _i1.PrismaNullable<String> client_cpf;

  final _i1.PrismaNullable<String> delivery_address;

  final _i1.PrismaNullable<String> status;

  @override
  Map<String, dynamic> toJson() => _$OrderMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderMaxAggregateOutputType implements _i1.JsonSerializable {
  const OrderMaxAggregateOutputType({
    this.id,
    this.user_id,
    this.transaction_id,
    this.client_cpf,
    this.delivery_address,
    this.status,
  });

  factory OrderMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> user_id;

  final _i1.PrismaNullable<int> transaction_id;

  final _i1.PrismaNullable<String> client_cpf;

  final _i1.PrismaNullable<String> delivery_address;

  final _i1.PrismaNullable<String> status;

  @override
  Map<String, dynamic> toJson() => _$OrderMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderItemCountAggregateOutputType implements _i1.JsonSerializable {
  const OrderItemCountAggregateOutputType({
    required this.id,
    required this.quantity,
    required this.order_id,
    required this.product_id,
    required this.$all,
  });

  factory OrderItemCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$OrderItemCountAggregateOutputTypeFromJson(json);

  final int id;

  final int quantity;

  final int order_id;

  final int product_id;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$OrderItemCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderItemAvgAggregateOutputType implements _i1.JsonSerializable {
  const OrderItemAvgAggregateOutputType({
    this.id,
    this.order_id,
    this.product_id,
  });

  factory OrderItemAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderItemAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> order_id;

  final _i1.PrismaNullable<double> product_id;

  @override
  Map<String, dynamic> toJson() =>
      _$OrderItemAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderItemSumAggregateOutputType implements _i1.JsonSerializable {
  const OrderItemSumAggregateOutputType({
    this.id,
    this.order_id,
    this.product_id,
  });

  factory OrderItemSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderItemSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> order_id;

  final _i1.PrismaNullable<int> product_id;

  @override
  Map<String, dynamic> toJson() =>
      _$OrderItemSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderItemMinAggregateOutputType implements _i1.JsonSerializable {
  const OrderItemMinAggregateOutputType({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  factory OrderItemMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderItemMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> quantity;

  final _i1.PrismaNullable<int> order_id;

  final _i1.PrismaNullable<int> product_id;

  @override
  Map<String, dynamic> toJson() =>
      _$OrderItemMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderItemMaxAggregateOutputType implements _i1.JsonSerializable {
  const OrderItemMaxAggregateOutputType({
    this.id,
    this.quantity,
    this.order_id,
    this.product_id,
  });

  factory OrderItemMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$OrderItemMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> quantity;

  final _i1.PrismaNullable<int> order_id;

  final _i1.PrismaNullable<int> product_id;

  @override
  Map<String, dynamic> toJson() =>
      _$OrderItemMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class User implements _i1.JsonSerializable {
  const User({
    required this.id,
    required this.email,
    required this.name,
    required this.password,
  });

  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);

  final int id;

  final String email;

  final String name;

  final String password;

  @override
  Map<String, dynamic> toJson() => _$UserToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Product implements _i1.JsonSerializable {
  const Product({
    required this.id,
    required this.name,
    required this.description,
    required this.price,
    this.image,
  });

  factory Product.fromJson(Map<String, dynamic> json) =>
      _$ProductFromJson(json);

  final int id;

  final String name;

  final String description;

  final double price;

  final _i1.PrismaNullable<String> image;

  @override
  Map<String, dynamic> toJson() => _$ProductToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Order implements _i1.JsonSerializable {
  const Order({
    required this.id,
    required this.user_id,
    this.transaction_id,
    this.client_cpf,
    required this.delivery_address,
    required this.status,
  });

  factory Order.fromJson(Map<String, dynamic> json) => _$OrderFromJson(json);

  final int id;

  final int user_id;

  final _i1.PrismaNullable<int> transaction_id;

  final _i1.PrismaNullable<String> client_cpf;

  final String delivery_address;

  final String status;

  @override
  Map<String, dynamic> toJson() => _$OrderToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class OrderItem implements _i1.JsonSerializable {
  const OrderItem({
    required this.id,
    required this.quantity,
    required this.order_id,
    required this.product_id,
  });

  factory OrderItem.fromJson(Map<String, dynamic> json) =>
      _$OrderItemFromJson(json);

  final int id;

  final String quantity;

  final int order_id;

  final int product_id;

  @override
  Map<String, dynamic> toJson() => _$OrderItemToJson(this);
}

class UserDelegate {
  const UserDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<User>> findUnique(
      {required UserWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueUser'] == null
        ? null
        : User.fromJson((result.data['findUniqueUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> findFirst({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstUser'] == null
        ? null
        : User.fromJson((result.data['findFirstUser'] as Map).cast());
  }

  Future<List<User>> findMany({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyUser'] as List)
        .whereType<Map>()
        .map((Map e) => User.fromJson(e.cast()))
        .toList();
  }

  Future<User> create(
      {required _i1.PrismaUnion<UserCreateInput, UserUncheckedCreateInput>
          data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['createOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<UserCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> update({
    required _i1.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput> data,
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneUser'] == null
        ? null
        : User.fromJson((result.data['updateOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required _i1.PrismaUnion<UserUpdateManyMutationInput,
            UserUncheckedUpdateManyInput>
        data,
    _i1.PrismaNullable<UserWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyUser'] as Map).cast());
  }

  Future<User> upsert({
    required UserWhereUniqueInput where,
    required _i1.PrismaUnion<UserCreateInput, UserUncheckedCreateInput> create,
    required _i1.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput> update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['upsertOneUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> delete(
      {required UserWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneUser'] == null
        ? null
        : User.fromJson((result.data['deleteOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<UserWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyUser'] as Map).cast());
  }

  Future<AggregateUser> aggregate({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateUser.fromJson((result.data['aggregateUser'] as Map).cast());
  }

  Future<List<UserGroupByOutputType>> groupBy({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithAggregationInput>> orderBy,
    required List<UserScalarFieldEnum> by,
    _i1.PrismaNullable<UserScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByUser'] as List)
        .whereType<Map>()
        .map((Map e) => UserGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class ProductDelegate {
  const ProductDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Product>> findUnique(
      {required ProductWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueProduct'] == null
        ? null
        : Product.fromJson((result.data['findUniqueProduct'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Product>> findFirst({
    _i1.PrismaNullable<ProductWhereInput> where,
    _i1.PrismaNullable<List<ProductOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<ProductWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<ProductScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstProduct'] == null
        ? null
        : Product.fromJson((result.data['findFirstProduct'] as Map).cast());
  }

  Future<List<Product>> findMany({
    _i1.PrismaNullable<ProductWhereInput> where,
    _i1.PrismaNullable<List<ProductOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<ProductWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<ProductScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyProduct'] as List)
        .whereType<Map>()
        .map((Map e) => Product.fromJson(e.cast()))
        .toList();
  }

  Future<Product> create(
      {required _i1.PrismaUnion<ProductCreateInput, ProductUncheckedCreateInput>
          data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Product.fromJson((result.data['createOneProduct'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<ProductCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyProduct'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Product>> update({
    required _i1.PrismaUnion<ProductUpdateInput, ProductUncheckedUpdateInput>
        data,
    required ProductWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneProduct'] == null
        ? null
        : Product.fromJson((result.data['updateOneProduct'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required _i1.PrismaUnion<ProductUpdateManyMutationInput,
            ProductUncheckedUpdateManyInput>
        data,
    _i1.PrismaNullable<ProductWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyProduct'] as Map).cast());
  }

  Future<Product> upsert({
    required ProductWhereUniqueInput where,
    required _i1.PrismaUnion<ProductCreateInput, ProductUncheckedCreateInput>
        create,
    required _i1.PrismaUnion<ProductUpdateInput, ProductUncheckedUpdateInput>
        update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Product.fromJson((result.data['upsertOneProduct'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Product>> delete(
      {required ProductWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneProduct'] == null
        ? null
        : Product.fromJson((result.data['deleteOneProduct'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<ProductWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyProduct'] as Map).cast());
  }

  Future<AggregateProduct> aggregate({
    _i1.PrismaNullable<ProductWhereInput> where,
    _i1.PrismaNullable<List<ProductOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<ProductWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateProduct.fromJson(
        (result.data['aggregateProduct'] as Map).cast());
  }

  Future<List<ProductGroupByOutputType>> groupBy({
    _i1.PrismaNullable<ProductWhereInput> where,
    _i1.PrismaNullable<List<ProductOrderByWithAggregationInput>> orderBy,
    required List<ProductScalarFieldEnum> by,
    _i1.PrismaNullable<ProductScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByProduct',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProductScalarFieldEnum.values
              .map((ProductScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByProduct'] as List)
        .whereType<Map>()
        .map((Map e) => ProductGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class OrderDelegate {
  const OrderDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Order>> findUnique(
      {required OrderWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueOrder'] == null
        ? null
        : Order.fromJson((result.data['findUniqueOrder'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Order>> findFirst({
    _i1.PrismaNullable<OrderWhereInput> where,
    _i1.PrismaNullable<List<OrderOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<OrderWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<OrderScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstOrder'] == null
        ? null
        : Order.fromJson((result.data['findFirstOrder'] as Map).cast());
  }

  Future<List<Order>> findMany({
    _i1.PrismaNullable<OrderWhereInput> where,
    _i1.PrismaNullable<List<OrderOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<OrderWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<OrderScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyOrder'] as List)
        .whereType<Map>()
        .map((Map e) => Order.fromJson(e.cast()))
        .toList();
  }

  Future<Order> create(
      {required _i1.PrismaUnion<OrderCreateInput, OrderUncheckedCreateInput>
          data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Order.fromJson((result.data['createOneOrder'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<OrderCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyOrder'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Order>> update({
    required _i1.PrismaUnion<OrderUpdateInput, OrderUncheckedUpdateInput> data,
    required OrderWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneOrder'] == null
        ? null
        : Order.fromJson((result.data['updateOneOrder'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required _i1.PrismaUnion<OrderUpdateManyMutationInput,
            OrderUncheckedUpdateManyInput>
        data,
    _i1.PrismaNullable<OrderWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyOrder'] as Map).cast());
  }

  Future<Order> upsert({
    required OrderWhereUniqueInput where,
    required _i1.PrismaUnion<OrderCreateInput, OrderUncheckedCreateInput>
        create,
    required _i1.PrismaUnion<OrderUpdateInput, OrderUncheckedUpdateInput>
        update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Order.fromJson((result.data['upsertOneOrder'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Order>> delete(
      {required OrderWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneOrder'] == null
        ? null
        : Order.fromJson((result.data['deleteOneOrder'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<OrderWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyOrder'] as Map).cast());
  }

  Future<AggregateOrder> aggregate({
    _i1.PrismaNullable<OrderWhereInput> where,
    _i1.PrismaNullable<List<OrderOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<OrderWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateOrder.fromJson(
        (result.data['aggregateOrder'] as Map).cast());
  }

  Future<List<OrderGroupByOutputType>> groupBy({
    _i1.PrismaNullable<OrderWhereInput> where,
    _i1.PrismaNullable<List<OrderOrderByWithAggregationInput>> orderBy,
    required List<OrderScalarFieldEnum> by,
    _i1.PrismaNullable<OrderScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByOrder',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderScalarFieldEnum.values
              .map((OrderScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByOrder'] as List)
        .whereType<Map>()
        .map((Map e) => OrderGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class OrderItemDelegate {
  const OrderItemDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<OrderItem>> findUnique(
      {required OrderItemWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueOrderItem'] == null
        ? null
        : OrderItem.fromJson(
            (result.data['findUniqueOrderItem'] as Map).cast());
  }

  Future<_i1.PrismaNullable<OrderItem>> findFirst({
    _i1.PrismaNullable<OrderItemWhereInput> where,
    _i1.PrismaNullable<List<OrderItemOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<OrderItemWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<OrderItemScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstOrderItem'] == null
        ? null
        : OrderItem.fromJson((result.data['findFirstOrderItem'] as Map).cast());
  }

  Future<List<OrderItem>> findMany({
    _i1.PrismaNullable<OrderItemWhereInput> where,
    _i1.PrismaNullable<List<OrderItemOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<OrderItemWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<OrderItemScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyOrderItem'] as List)
        .whereType<Map>()
        .map((Map e) => OrderItem.fromJson(e.cast()))
        .toList();
  }

  Future<OrderItem> create(
      {required _i1
              .PrismaUnion<OrderItemCreateInput, OrderItemUncheckedCreateInput>
          data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return OrderItem.fromJson(
        (result.data['createOneOrderItem'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<OrderItemCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyOrderItem'] as Map).cast());
  }

  Future<_i1.PrismaNullable<OrderItem>> update({
    required _i1
            .PrismaUnion<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
        data,
    required OrderItemWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneOrderItem'] == null
        ? null
        : OrderItem.fromJson((result.data['updateOneOrderItem'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required _i1.PrismaUnion<OrderItemUpdateManyMutationInput,
            OrderItemUncheckedUpdateManyInput>
        data,
    _i1.PrismaNullable<OrderItemWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyOrderItem'] as Map).cast());
  }

  Future<OrderItem> upsert({
    required OrderItemWhereUniqueInput where,
    required _i1
            .PrismaUnion<OrderItemCreateInput, OrderItemUncheckedCreateInput>
        create,
    required _i1
            .PrismaUnion<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
        update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return OrderItem.fromJson(
        (result.data['upsertOneOrderItem'] as Map).cast());
  }

  Future<_i1.PrismaNullable<OrderItem>> delete(
      {required OrderItemWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneOrderItem'] == null
        ? null
        : OrderItem.fromJson((result.data['deleteOneOrderItem'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<OrderItemWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyOrderItem'] as Map).cast());
  }

  Future<AggregateOrderItem> aggregate({
    _i1.PrismaNullable<OrderItemWhereInput> where,
    _i1.PrismaNullable<List<OrderItemOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<OrderItemWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateOrderItem.fromJson(
        (result.data['aggregateOrderItem'] as Map).cast());
  }

  Future<List<OrderItemGroupByOutputType>> groupBy({
    _i1.PrismaNullable<OrderItemWhereInput> where,
    _i1.PrismaNullable<List<OrderItemOrderByWithAggregationInput>> orderBy,
    required List<OrderItemScalarFieldEnum> by,
    _i1.PrismaNullable<OrderItemScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByOrderItem',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(OrderItemScalarFieldEnum.values
              .map((OrderItemScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByOrderItem'] as List)
        .whereType<Map>()
        .map((Map e) => OrderItemGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

final _i3.Document dmmf = _i3.Document.fromJson({
  'datamodel': {
    'models': [
      {
        'name': 'User',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'email',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': true,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'email',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'name',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'password',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'password',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'orders',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Order',
            'relationName': 'OrderToUser',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'orders',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Order',
              'relationName': 'OrderToUser',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'User',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'email',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'password',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'orders',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Order',
              'relationName': 'OrderToUser',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'Product',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'name',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'description',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'price',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Float',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'price',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Float',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'image',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'image',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'orderedItems',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'OrderItem',
            'relationName': 'OrderItemToProduct',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'orderedItems',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'OrderItem',
              'relationName': 'OrderItemToProduct',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Product',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'price',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Float',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'image',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'orderedItems',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'OrderItem',
              'relationName': 'OrderItemToProduct',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'Order',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'user_id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'user_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'transaction_id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'transaction_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'client_cpf',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'client_cpf',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'delivery_address',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'delivery_address',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'status',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'String',
            'default': 'pending',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'status',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'String',
              'default': 'pending',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'user',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'User',
            'relationName': 'OrderToUser',
            'relationFromFields': ['user_id'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'user',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'User',
              'relationName': 'OrderToUser',
              'relationFromFields': ['user_id'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'items',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'OrderItem',
            'relationName': 'OrderToOrderItem',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'items',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'OrderItem',
              'relationName': 'OrderToOrderItem',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Order',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'user_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'transaction_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'client_cpf',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'delivery_address',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'status',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'String',
              'default': 'pending',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'user',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'User',
              'relationName': 'OrderToUser',
              'relationFromFields': ['user_id'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'items',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'OrderItem',
              'relationName': 'OrderToOrderItem',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'OrderItem',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'quantity',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'quantity',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'order_id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'order_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'product_id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'product_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'order',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Order',
            'relationName': 'OrderToOrderItem',
            'relationFromFields': ['order_id'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'order',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Order',
              'relationName': 'OrderToOrderItem',
              'relationFromFields': ['order_id'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'product',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Product',
            'relationName': 'OrderItemToProduct',
            'relationFromFields': ['product_id'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'product',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Product',
              'relationName': 'OrderItemToProduct',
              'relationFromFields': ['product_id'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'OrderItem',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'quantity',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'order_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'product_id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'order',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Order',
              'relationName': 'OrderToOrderItem',
              'relationFromFields': ['order_id'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'product',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Product',
              'relationName': 'OrderItemToProduct',
              'relationFromFields': ['product_id'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
    ],
    'enums': [],
    'types': [],
  },
  'schema': {
    'rootQueryType': null,
    'rootMutationType': null,
    'inputObjectTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'UserWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orders',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'orders',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orderedItems',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'orderedItems',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProductScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ProductScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProductScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'orders',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'orders',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orders',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orders',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUncheckedUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orderedItems',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateNestedManyWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orderedItems',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'OrderItemUncheckedCreateNestedManyWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'FloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orderedItems',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyWithoutProductNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'FloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'orderedItems',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'OrderItemUncheckedUpdateManyWithoutProductNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'FloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'FloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateNestedOneWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateNestedManyWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateNestedManyWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpdateOneRequiredWithoutOrdersNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyWithoutOrderNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedUpdateManyWithoutOrderNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateNestedOneWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateNestedOneWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateOneRequiredWithoutItemsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'ProductUpdateOneRequiredWithoutOrderedItemsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'FloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'FloatWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateNestedManyWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedCreateNestedManyWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateManyWithoutUserNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedUpdateManyWithoutUserNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateNestedManyWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyProductInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedCreateNestedManyWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyProductInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'FloatFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NullableStringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateManyWithoutProductNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyProductInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyWithWhereWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateManyWithWhereWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateManyWithoutProductNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyProductInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyWithWhereWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateManyWithWhereWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateNestedOneWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateOrConnectWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateNestedManyWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyOrderInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedCreateNestedManyWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyOrderInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NullableIntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateOneRequiredWithoutOrdersNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateOrConnectWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpsertWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpdateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedUpdateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateManyWithoutOrderNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyOrderInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyWithWhereWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateManyWithWhereWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateManyWithoutOrderNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemCreateOrConnectWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpsertWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateManyOrderInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateWithWhereUniqueWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyWithWhereWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemUpdateManyWithWhereWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateNestedOneWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateOrConnectWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCreateNestedOneWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProductUncheckedCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateOrConnectWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateOneRequiredWithoutItemsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateOrConnectWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpsertWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedUpdateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUpdateOneRequiredWithoutOrderedItemsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProductUncheckedCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateOrConnectWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductUpsertWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductUpdateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProductUncheckedUpdateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateNestedManyWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedCreateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateNestedManyWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateOrConnectWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateManyUserInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderCreateManyUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpsertWithWhereUniqueWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateWithWhereUniqueWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateManyWithWhereWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedUpdateManyWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateNestedOneWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedCreateWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateOrConnectWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateManyProductInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderItemCreateManyProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpsertWithWhereUniqueWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedUpdateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateWithWhereUniqueWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedUpdateWithoutProductInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateManyWithWhereWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type':
                      'OrderItemUncheckedUpdateManyWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedCreateWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateOrConnectWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateNestedOneWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedCreateWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateOrConnectWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateManyOrderInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'OrderItemCreateManyOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpsertWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpdateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedUpdateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpsertWithWhereUniqueWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedUpdateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedCreateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateWithWhereUniqueWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedUpdateWithoutOrderInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateManyWithWhereWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedUpdateManyWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateNestedOneWithoutOrdersInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedCreateWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateOrConnectWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCreateWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUncheckedCreateWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCreateOrConnectWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProductUncheckedCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpsertWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedUpdateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'OrderUncheckedCreateWithoutItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpdateOneRequiredWithoutOrdersNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedUpdateWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUpsertWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductUpdateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProductUncheckedUpdateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProductCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProductUncheckedCreateWithoutOrderedItemsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUpdateWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'FloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductUncheckedUpdateWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'price',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'FloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'image',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCreateManyUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUpdateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUpdateManyWithoutOrderNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedUpdateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'items',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderItemUncheckedUpdateManyWithoutOrderNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderUncheckedUpdateManyWithoutOrdersInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'transaction_id',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'client_cpf',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delivery_address',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'status',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateManyProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'OrderUpdateOneRequiredWithoutItemsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateWithoutProductInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateManyWithoutOrderedItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'order_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCreateManyOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUpdateWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'ProductUpdateOneRequiredWithoutOrderedItemsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateWithoutOrderInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemUncheckedUpdateManyWithoutItemsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'quantity',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'product_id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'outputObjectTypes': {
      'model': [
        {
          'name': 'User',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'orders',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'UserCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Product',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'price',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'image',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'orderedItems',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'ProductCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Order',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'transaction_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'client_cpf',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'delivery_address',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'status',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'items',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'OrderCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItem',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'quantity',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
      'prisma': [
        {
          'name': 'Query',
          'fields': [
            {
              'name': 'findFirstUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyUser',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateUser',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByUser',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'UserGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstProduct',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyProduct',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateProduct',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateProduct',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByProduct',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'ProductGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueProduct',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstOrder',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyOrder',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateOrder',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateOrder',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByOrder',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'OrderGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueOrder',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstOrderItem',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateOrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'OrderItemGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueOrderItem',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Mutation',
          'fields': [
            {
              'name': 'createOneUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneProduct',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneProduct',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyProduct',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProductCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneProduct',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneProduct',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Product',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyProduct',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProductUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyProduct',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProductWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneOrder',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneOrder',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyOrder',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneOrder',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneOrder',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Order',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyOrder',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyOrder',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'OrderItemCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneOrderItem',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneOrderItem',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItem',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'OrderItemUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyOrderItem',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'OrderItemWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'executeRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'queryRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateUser',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateProduct',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'price',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'image',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProductMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateOrder',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'transaction_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'client_cpf',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'delivery_address',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'status',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateOrderItem',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'quantity',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'OrderItemMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AffectedRowsOutput',
          'fields': [
            {
              'name': 'count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountOutputType',
          'fields': [
            {
              'name': 'orders',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCountOutputType',
          'fields': [
            {
              'name': 'orderedItems',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'price',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'image',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'price',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'price',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'price',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'image',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProductMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'price',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'image',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCountOutputType',
          'fields': [
            {
              'name': 'items',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'transaction_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'client_cpf',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'delivery_address',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'status',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'transaction_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'transaction_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'transaction_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'client_cpf',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'delivery_address',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'status',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'transaction_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'client_cpf',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'delivery_address',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'status',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'quantity',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product_id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'quantity',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'OrderItemMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'quantity',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'order_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'product_id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'enumTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'OrderItemScalarFieldEnum',
          'values': [
            'id',
            'quantity',
            'order_id',
            'product_id',
          ],
        },
        {
          'name': 'OrderScalarFieldEnum',
          'values': [
            'id',
            'user_id',
            'transaction_id',
            'client_cpf',
            'delivery_address',
            'status',
          ],
        },
        {
          'name': 'ProductScalarFieldEnum',
          'values': [
            'id',
            'name',
            'description',
            'price',
            'image',
          ],
        },
        {
          'name': 'SortOrder',
          'values': [
            'asc',
            'desc',
          ],
        },
        {
          'name': 'TransactionIsolationLevel',
          'values': [
            'ReadUncommitted',
            'ReadCommitted',
            'RepeatableRead',
            'Serializable',
          ],
        },
        {
          'name': 'UserScalarFieldEnum',
          'values': [
            'id',
            'email',
            'name',
            'password',
          ],
        },
      ],
    },
  },
  'mappings': {
    'modelOperations': [
      {
        'model': 'User',
        'findUnique': 'findUniqueUser',
        'findFirst': 'findFirstUser',
        'findMany': 'findManyUser',
        'create': 'createOneUser',
        'createMany': 'createManyUser',
        'update': 'updateOneUser',
        'updateMany': 'updateManyUser',
        'upsert': 'upsertOneUser',
        'delete': 'deleteOneUser',
        'deleteMany': 'deleteManyUser',
        'aggregate': 'aggregateUser',
        'groupBy': 'groupByUser',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'Product',
        'findUnique': 'findUniqueProduct',
        'findFirst': 'findFirstProduct',
        'findMany': 'findManyProduct',
        'create': 'createOneProduct',
        'createMany': 'createManyProduct',
        'update': 'updateOneProduct',
        'updateMany': 'updateManyProduct',
        'upsert': 'upsertOneProduct',
        'delete': 'deleteOneProduct',
        'deleteMany': 'deleteManyProduct',
        'aggregate': 'aggregateProduct',
        'groupBy': 'groupByProduct',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'Order',
        'findUnique': 'findUniqueOrder',
        'findFirst': 'findFirstOrder',
        'findMany': 'findManyOrder',
        'create': 'createOneOrder',
        'createMany': 'createManyOrder',
        'update': 'updateOneOrder',
        'updateMany': 'updateManyOrder',
        'upsert': 'upsertOneOrder',
        'delete': 'deleteOneOrder',
        'deleteMany': 'deleteManyOrder',
        'aggregate': 'aggregateOrder',
        'groupBy': 'groupByOrder',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'OrderItem',
        'findUnique': 'findUniqueOrderItem',
        'findFirst': 'findFirstOrderItem',
        'findMany': 'findManyOrderItem',
        'create': 'createOneOrderItem',
        'createMany': 'createManyOrderItem',
        'update': 'updateOneOrderItem',
        'updateMany': 'updateManyOrderItem',
        'upsert': 'upsertOneOrderItem',
        'delete': 'deleteOneOrderItem',
        'deleteMany': 'deleteManyOrderItem',
        'aggregate': 'aggregateOrderItem',
        'groupBy': 'groupByOrderItem',
        'findRaw': null,
        'aggregateRaw': null,
      },
    ],
    'otherOperations': {
      'read': [],
      'write': [
        'executeRaw',
        'queryRaw',
      ],
    },
  },
});
const String schema =
    '// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = "prisma-client-dart"\n}\n\ndatasource db {\n  provider = "mysql"\n  url      = "mysql://dart:password@localhost:3306/vakinha_burger"\n}\n\nmodel User {\n  id       Int     @id @default(autoincrement())\n  email    String  @unique\n  name     String\n  password String\n  orders   Order[]\n}\n\nmodel Product {\n  id           Int         @id @default(autoincrement())\n  name         String\n  description  String\n  price        Float\n  image        String?\n  orderedItems OrderItem[]\n}\n\nmodel Order {\n  id               Int         @id @default(autoincrement())\n  user_id          Int\n  transaction_id   Int?\n  client_cpf       String?\n  delivery_address String\n  status           String      @default("pending")\n  user             User        @relation(fields: [user_id], references: [id])\n  items            OrderItem[]\n}\n\nmodel OrderItem {\n  id         Int     @id @default(autoincrement())\n  quantity   String\n  order_id   Int\n  product_id Int\n  order      Order   @relation(fields: [order_id], references: [id])\n  product    Product @relation(fields: [product_id], references: [id])\n}\n';
const String _executable =
    r'C:\Users\fernn\Documents\GitHub\vakinha_burger\api\vakinha_burger_api\.dart_tool\prisma\query-engine';

class Datasources {
  Datasources({this.db});

  final _i1.PrismaNullable<_i1.Datasource> db;

  Map<String, _i1.Datasource> _toOverwrites() {
    final $overwrites = <String, _i1.PrismaNullable<_i1.Datasource>>{'db': db}
      ..removeWhere((
        _,
        v,
      ) =>
          v == null);
    return $overwrites.cast();
  }
}

class PrismaClient {
  const PrismaClient._(
    this._engine, [
    this._headers,
  ]);

  factory PrismaClient({_i1.PrismaNullable<Datasources> datasources}) {
    final _i1.Engine engine = _i1.BinaryEngine(
      datasources: datasources?._toOverwrites() ?? <String, _i1.Datasource>{},
      dmmf: dmmf,
      schema: schema,
      executable: _executable,
      environment: _i4.environment.all,
    );
    return PrismaClient._(
      engine,
      null,
    );
  }

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  UserDelegate get user => UserDelegate._(
        _engine,
        _headers,
      );
  ProductDelegate get product => ProductDelegate._(
        _engine,
        _headers,
      );
  OrderDelegate get order => OrderDelegate._(
        _engine,
        _headers,
      );
  OrderItemDelegate get orderItem => OrderItemDelegate._(
        _engine,
        _headers,
      );

  /// Connect to the database.
  Future<void> $connect() => _engine.start();

  /// Disconnect from the database.
  Future<void> $disconnect() => _engine.stop();
  Future<T> $transaction<T>(
    Future<T> Function(PrismaClient) fn, [
    _i1.TransactionOptions? options,
  ]) async {
    if (_headers?.transactionId != null) return fn(this);
    final _i1.TransactionHeaders headers = _i1.TransactionHeaders();
    final _i1.TransactionInfo info =
        await _engine.startTransaction(headers: headers);
    try {
      final T result = await fn(PrismaClient._(
        _engine,
        _i1.QueryEngineRequestHeaders(transactionId: info.id),
      ));
      await _engine.commitTransaction(
        headers: headers,
        info: info,
      );
      return result;
    } catch (e) {
      await _engine.rollbackTransaction(
        headers: headers,
        info: info,
      );
      rethrow;
    }
  }
}
